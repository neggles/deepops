---
- name: Get slurm group ID
  ansible.builtin.cmd:
    cmd: id -g {{ slurm_username }}
  register: cmd_slurm_group_id
  changed_when: false
  when: slurm_user_gid is undefined

- name: Set slurm group ID variable
  ansible.builtin.set_fact:
    slurm_user_gid: "{{ cmd_slurm_group_id.stdout | int }}"
  when: cmd_slurm_group_id is defined

- name: Create slurm-exporter config dir
  ansible.builtin.file:
    path: "{{ slurm_exporter_config_dir }}"
    state: directory
    mode: "0755"

- name: create prometheus config dir
  ansible.builtin.file:
    path: "{{ prometheus_config_dir }}"
    state: directory
    mode: "0755"

- name: create prometheus endpoint config dir
  ansible.builtin.file:
    path: "{{ prometheus_cfg_endpoint_dir }}"
    state: directory
    mode: "0755"

- name: install prometheus endpoint config file
  ansible.builtin.template:
    src: "{{ slurm_exporter_conf_template }}"
    dest: "{{ prometheus_cfg_endpoint_dir }}/slurm-exporter.yml"
    owner: root
    group: root
    mode: 0644

- name: create grafana data dir
  ansible.builtin.file:
    path: "{{ grafana_data_dir }}"
    state: directory
    owner: "{{ grafana_user_id }}"
    mode: "0755"

- name: create grafana dashboard dir
  ansible.builtin.file:
    path: "{{ grafana_cfg_dashboard_path }}"
    state: directory
    owner: "{{ grafana_user_id }}"
    mode: "0755"

- name: copy grafana dashboards
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ grafana_cfg_dashboard_path }}"
    owner: "{{ grafana_user_id }}"
    mode: "0644"
  with_items:
    - slurm-dashboard.json
  notify: restart grafana

- name: Install Dockerfile
  ansible.builtin.copy:
    src: Dockerfile
    dest: "{{ slurm_exporter_config_dir }}/Dockerfile"
    owner: root
    group: root
    mode: 0644

- name: Install docker-compose file
  ansible.builtin.template:
    src: templates/docker-compose.yml.j2
    dest: "{{ slurm_exporter_config_dir }}/docker-compose.yml"
    owner: root
    group: root
    mode: 0644

- name: Run docker compose build
  ansible.builtin.command:
    cmd: docker compose -f "{{ slurm_exporter_config_dir }}/docker-compose.yml" build
    chdir: "{{ slurm_exporter_config_dir }}"

- name: install systemd unit file
  ansible.builtin.template:
    src: templates/docker.slurm-exporter.service.j2
    dest: "/etc/systemd/system/{{ slurm_exporter_svc_name }}"
    owner: root
    group: root
    mode: 0644
  notify: restart slurm-exporter

- name: configure service
  ansible.builtin.systemd:
    name: "{{ slurm_exporter_svc_name }}"
    state: "{{ slurm_exporter_state }}"
    enabled: "{{ slurm_exporter_enabled }}"
    daemon_reload: yes
  notify: restart slurm-exporter
